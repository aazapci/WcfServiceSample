//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WFAServiceSample.MyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceSample")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ogrenci", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceSample")]
    [System.SerializableAttribute()]
    public partial class Ogrenci : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SoyadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ad {
            get {
                return this.AdField;
            }
            set {
                if ((object.ReferenceEquals(this.AdField, value) != true)) {
                    this.AdField = value;
                    this.RaisePropertyChanged("Ad");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Soyad {
            get {
                return this.SoyadField;
            }
            set {
                if ((object.ReferenceEquals(this.SoyadField, value) != true)) {
                    this.SoyadField = value;
                    this.RaisePropertyChanged("Soyad");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoriesDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceSample.DTO")]
    [System.SerializableAttribute()]
    public partial class CategoriesDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceSample.DTO")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitsInStockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitsInStock {
            get {
                return this.UnitsInStockField;
            }
            set {
                if ((this.UnitsInStockField.Equals(value) != true)) {
                    this.UnitsInStockField = value;
                    this.RaisePropertyChanged("UnitsInStock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WFAServiceSample.MyService.CompositeType GetDataUsingDataContract(WFAServiceSample.MyService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.CompositeType> GetDataUsingDataContractAsync(WFAServiceSample.MyService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ToplamaYap", ReplyAction="http://tempuri.org/IService1/ToplamaYapResponse")]
        string ToplamaYap(int sayi1, int sayi2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ToplamaYap", ReplyAction="http://tempuri.org/IService1/ToplamaYapResponse")]
        System.Threading.Tasks.Task<string> ToplamaYapAsync(int sayi1, int sayi2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OgrenciEkle", ReplyAction="http://tempuri.org/IService1/OgrenciEkleResponse")]
        WFAServiceSample.MyService.Ogrenci OgrenciEkle(WFAServiceSample.MyService.Ogrenci instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OgrenciEkle", ReplyAction="http://tempuri.org/IService1/OgrenciEkleResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.Ogrenci> OgrenciEkleAsync(WFAServiceSample.MyService.Ogrenci instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KategoriSelect", ReplyAction="http://tempuri.org/IService1/KategoriSelectResponse")]
        WFAServiceSample.MyService.CategoriesDTO KategoriSelect(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KategoriSelect", ReplyAction="http://tempuri.org/IService1/KategoriSelectResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.CategoriesDTO> KategoriSelectAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductSelectByID", ReplyAction="http://tempuri.org/IService1/ProductSelectByIDResponse")]
        WFAServiceSample.MyService.ProductDTO ProductSelectByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductSelectByID", ReplyAction="http://tempuri.org/IService1/ProductSelectByIDResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.ProductDTO> ProductSelectByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCategories", ReplyAction="http://tempuri.org/IService1/GetAllCategoriesResponse")]
        WFAServiceSample.MyService.CategoriesDTO[] GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllCategories", ReplyAction="http://tempuri.org/IService1/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.CategoriesDTO[]> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductSelectByCategoryID", ReplyAction="http://tempuri.org/IService1/ProductSelectByCategoryIDResponse")]
        WFAServiceSample.MyService.ProductDTO[] ProductSelectByCategoryID(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductSelectByCategoryID", ReplyAction="http://tempuri.org/IService1/ProductSelectByCategoryIDResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.ProductDTO[]> ProductSelectByCategoryIDAsync(int categoryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductUpdate", ReplyAction="http://tempuri.org/IService1/ProductUpdateResponse")]
        int ProductUpdate(WFAServiceSample.MyService.ProductDTO instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductUpdate", ReplyAction="http://tempuri.org/IService1/ProductUpdateResponse")]
        System.Threading.Tasks.Task<int> ProductUpdateAsync(WFAServiceSample.MyService.ProductDTO instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductDelete", ReplyAction="http://tempuri.org/IService1/ProductDeleteResponse")]
        int ProductDelete(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductDelete", ReplyAction="http://tempuri.org/IService1/ProductDeleteResponse")]
        System.Threading.Tasks.Task<int> ProductDeleteAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductAdd", ReplyAction="http://tempuri.org/IService1/ProductAddResponse")]
        int ProductAdd(WFAServiceSample.MyService.ProductDTO instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductAdd", ReplyAction="http://tempuri.org/IService1/ProductAddResponse")]
        System.Threading.Tasks.Task<int> ProductAddAsync(WFAServiceSample.MyService.ProductDTO instance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductSelect", ReplyAction="http://tempuri.org/IService1/ProductSelectResponse")]
        WFAServiceSample.MyService.ProductDTO[] ProductSelect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ProductSelect", ReplyAction="http://tempuri.org/IService1/ProductSelectResponse")]
        System.Threading.Tasks.Task<WFAServiceSample.MyService.ProductDTO[]> ProductSelectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WFAServiceSample.MyService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WFAServiceSample.MyService.IService1>, WFAServiceSample.MyService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WFAServiceSample.MyService.CompositeType GetDataUsingDataContract(WFAServiceSample.MyService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.CompositeType> GetDataUsingDataContractAsync(WFAServiceSample.MyService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string ToplamaYap(int sayi1, int sayi2) {
            return base.Channel.ToplamaYap(sayi1, sayi2);
        }
        
        public System.Threading.Tasks.Task<string> ToplamaYapAsync(int sayi1, int sayi2) {
            return base.Channel.ToplamaYapAsync(sayi1, sayi2);
        }
        
        public WFAServiceSample.MyService.Ogrenci OgrenciEkle(WFAServiceSample.MyService.Ogrenci instance) {
            return base.Channel.OgrenciEkle(instance);
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.Ogrenci> OgrenciEkleAsync(WFAServiceSample.MyService.Ogrenci instance) {
            return base.Channel.OgrenciEkleAsync(instance);
        }
        
        public WFAServiceSample.MyService.CategoriesDTO KategoriSelect(int ID) {
            return base.Channel.KategoriSelect(ID);
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.CategoriesDTO> KategoriSelectAsync(int ID) {
            return base.Channel.KategoriSelectAsync(ID);
        }
        
        public WFAServiceSample.MyService.ProductDTO ProductSelectByID(int ID) {
            return base.Channel.ProductSelectByID(ID);
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.ProductDTO> ProductSelectByIDAsync(int ID) {
            return base.Channel.ProductSelectByIDAsync(ID);
        }
        
        public WFAServiceSample.MyService.CategoriesDTO[] GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.CategoriesDTO[]> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public WFAServiceSample.MyService.ProductDTO[] ProductSelectByCategoryID(int categoryID) {
            return base.Channel.ProductSelectByCategoryID(categoryID);
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.ProductDTO[]> ProductSelectByCategoryIDAsync(int categoryID) {
            return base.Channel.ProductSelectByCategoryIDAsync(categoryID);
        }
        
        public int ProductUpdate(WFAServiceSample.MyService.ProductDTO instance) {
            return base.Channel.ProductUpdate(instance);
        }
        
        public System.Threading.Tasks.Task<int> ProductUpdateAsync(WFAServiceSample.MyService.ProductDTO instance) {
            return base.Channel.ProductUpdateAsync(instance);
        }
        
        public int ProductDelete(int ID) {
            return base.Channel.ProductDelete(ID);
        }
        
        public System.Threading.Tasks.Task<int> ProductDeleteAsync(int ID) {
            return base.Channel.ProductDeleteAsync(ID);
        }
        
        public int ProductAdd(WFAServiceSample.MyService.ProductDTO instance) {
            return base.Channel.ProductAdd(instance);
        }
        
        public System.Threading.Tasks.Task<int> ProductAddAsync(WFAServiceSample.MyService.ProductDTO instance) {
            return base.Channel.ProductAddAsync(instance);
        }
        
        public WFAServiceSample.MyService.ProductDTO[] ProductSelect() {
            return base.Channel.ProductSelect();
        }
        
        public System.Threading.Tasks.Task<WFAServiceSample.MyService.ProductDTO[]> ProductSelectAsync() {
            return base.Channel.ProductSelectAsync();
        }
    }
}
